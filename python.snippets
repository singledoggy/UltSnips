snippet	warning "warning" bA
import warnings
warnings.filterwarnings('ignore')
endsnippet

snippet ini "pd" b
import pandas as pd
import numpy as np
import xarray as xr
endsnippet

snippet picklesave "picklesave" b
import pickle
pickle_list = [$1]
# Saving the objects:
with open('./data/$2.pkl', 'wb') as f:
    pickle.dump(pickle_list, f)
endsnippet

snippet pickleload "picklesave" b
import pickle
# Getting back the objects:
with open('./data/$1', 'rb') as f:
    $2 = pickle.load(f)
endsnippet

snippet dillsave "dillsave" b
import dill
dill.dump_session("./data/`!p snip.rv = snip.basename`.pkl")
endsnippet

snippet dillload "dillload" b
import dill
dill.load_session("./data/`!p snip.rv = snip.basename`.pkl")
endsnippet


snippet fig "fig" b
import proplot as pplt
# plt.rcParams['axes.unicode_minus'] = False
# plt.rcParams["mathtext.default"]='regular'
# plt.rcParams['font.sans-serif']=['Songti SC']
fig, axs = pplt.subplots(ncols=1, nrows=1, figwidth=5, span=False)
axs.format(
    suptitle='',
    xlabel='xlabel', ylabel='ylabel', abc=True
)
endsnippet

snippet geofig "geofig" b
import proplot as pplt
# plt.rcParams['axes.unicode_minus'] = False
# plt.rcParams["mathtext.default"]='regular'
# plt.rcParams['font.sans-serif']=['Songti SC']
fig, axs = pplt.subplots(ncols=1, nrows=1, figwidth=5, span=False,
						 proj=proj)
axs.format(
    suptitle='',
    xlabel='xlabel', ylabel='ylabel', abc=True

endsnippet

snippet latlon "lat lon grid set" b
gl = ax.gridlines(draw_labels=True,
                  x_inline=False, y_inline=False,
                  color='k', linestyle='dotted', zorder=4)
gl.top_labels = gl.right_labels = False
gl.rotate_labels = False
endsnippet

snippet np.savetxt "numpy" iA
np.savetxt('./data/$1.csv',a, delimiter=",",fmt='%.2f')
endsnippet

snippet .to_csv "pandas" iA
.to_csv('./data/$1.csv',sep=',', float_format='%.2f')
endsnippet

snippet xr.open_dataset "dataset" i
xr.open_dataset(
    '$1',
    decode_coords="all"
)
endsnippet

snippet plt.savefig "expand" b
plt.savefig('./data/$1',
            dpi=300, bbox_inches='tight')
endsnippet

snippet xr.open_mfdataset "expand" i
xr.open_mfdataset(paths, combine='by_coords')
endsnippet

snippet xr.save_mfdataset "expand" i
xr.save_mfdataset(datasets=datasets, paths=paths)
endsnippet
